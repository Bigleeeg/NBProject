		/// <summary>
		/// 插入记录
		/// </summary>
		public static {0}Entity Add({0}Entity entity)
		{{
			const string sql = "INSERT INTO `{7}` ({1}) VALUES ({2});select last_insert_id();";

			List<MySql.Data.MySqlClient.MySqlParameter> sqlParameterList = new List<MySqlParameter>();
{4}

			int id = Convert.ToInt32(DatabaseFactory.CreateDatabase().ExecuteScalar(CommandType.Text, sql, sqlParameterList.ToArray()));
            if (id > 0)
            {{
				entity.{3} = id;
                return entity;
            }}
            return null;
		}}
		/// <summary>
		/// 批量插入记录
		/// </summary>
		private static void AddBatch(List<{0}Entity> entities)
        {{
		    if (entities == null || entities.Count == 0)
			{{
				return;
			}}
            const string sqlFormat = "INSERT INTO `{7}` ({1}) VALUES ({{0}});";
            string sql = string.Empty;
            int index = 0;
			string currentParameter = string.Empty;
            List<MySql.Data.MySqlClient.MySqlParameter> sqlParameterList = new List<MySqlParameter>();
            foreach({0}Entity entity in entities)
            {{
                string valuesParas = string.Empty;
{5}
                valuesParas = valuesParas.Substring(1);
                sql = sql + string.Format(sqlFormat, valuesParas);
				index++;
            }}
            
            DatabaseFactory.CreateDatabase().ExecuteNonQuery(CommandType.Text, sql, sqlParameterList.ToArray());
        }}
		/// <summary>
		/// 批量插入记录
		/// </summary>
		public static void Add(List<{0}Entity> entities)
        {{
            int i = 0;
            const int size = {6};
            do
            {{
                List<{0}Entity> contents = entities.Skip(i * size).Take(size).ToList();
                AddBatch(contents);
                i++;
            }} while (i * size < entities.Count);

        }}